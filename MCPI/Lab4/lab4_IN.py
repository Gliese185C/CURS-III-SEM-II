# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'lab4_IN.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import lab4

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1200, 800)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.InputText = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.InputText.setGeometry(QtCore.QRect(10, 10, 531, 271))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.InputText.setFont(font)
        self.InputText.setObjectName("InputText")
        self.OutputHex = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.OutputHex.setGeometry(QtCore.QRect(10, 340, 531, 201))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.OutputHex.setFont(font)
        self.OutputHex.setReadOnly(True)
        self.OutputHex.setObjectName("OutputHex")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 300, 241, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.OutputKey = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.OutputKey.setGeometry(QtCore.QRect(10, 610, 1181, 31))
        self.OutputKey.setPlainText("")
        self.OutputKey.setObjectName("OutputKey")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 560, 31, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.OutputKeyPlus = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.OutputKeyPlus.setGeometry(QtCore.QRect(10, 700, 1181, 31))
        self.OutputKeyPlus.setObjectName("OutputKeyPlus")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(10, 660, 51, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.OutputLog = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.OutputLog.setGeometry(QtCore.QRect(560, 10, 621, 531))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.OutputLog.setFont(font)
        self.OutputLog.setReadOnly(True)
        self.OutputLog.setObjectName("OutputLog")
        self.Start = QtWidgets.QPushButton(self.centralwidget)
        self.Start.setGeometry(QtCore.QRect(560, 750, 101, 41))
        font = QtGui.QFont()
        font.setPointSize(0)
        self.Start.setFont(font)
        self.Start.setObjectName("Start")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.Start.clicked.connect(self.extend_key)
        self.ex_key = lab4.Des()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.InputText.setPlaceholderText(_translate("MainWindow", "Enter symbols here"))
        self.label.setText(_translate("MainWindow", "Hex presentation"))
        self.label_2.setText(_translate("MainWindow", "Key K"))
        self.label_3.setText(_translate("MainWindow", "Key K+"))
        self.Start.setText(_translate("MainWindow", "PushButton"))

    def extend_key(self):
        message = self.InputText.toPlainText()
        response = self.ex_key.key_expanded(message)
        if not response["status"]["process"]:
            self.error_screen(response["status"]["error"])
        else:
            self.OutputKey.setPlainText(response["context"]["key"])
            self.OutputKeyPlus.setPlainText(response["context"]["keyp"])
            self.OutputHex.setPlainText(response["context"]["hex"])
            with open("log.txt","r") as file:
                self.OutputLog.setPlainText(file.read())

    def error_screen(self,error):
        tmp = QtWidgets.QMessageBox()
        tmp.setIcon(QtWidgets.QMessageBox.Critical)
        tmp.setWindowTitle("Incorrect validation")
        tmp.setText(error)
        tmp.exec_()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
