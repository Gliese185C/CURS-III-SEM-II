# -*- coding: utf-8 -*-
import random

# Form implementation generated from reading ui file 'info.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):

    def __init__(self):
        self.window = None
        self.verified_planes = []
        self.fake_planes = []
        self.clear_planes = []
    def setupUi(self, MainWindow, window):
        self.window = window
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(341, 625)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.planeNumber = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.planeNumber.setGeometry(QtCore.QRect(0, 0, 341, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.planeNumber.setFont(font)
        self.planeNumber.setObjectName("planeNumber")
        self.searchPlane = QtWidgets.QPushButton(self.centralwidget)
        self.searchPlane.setGeometry(QtCore.QRect(100, 60, 141, 41))
        self.searchPlane.setObjectName("searchPlane")
        self.planeInfo = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.planeInfo.setGeometry(QtCore.QRect(0, 130, 341, 491))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.planeInfo.setFont(font)
        self.planeInfo.setReadOnly(True)
        self.planeInfo.setObjectName("planeInfo")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.searchPlane.clicked.connect(self.search_plane_info)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.planeNumber.setPlaceholderText(_translate("MainWindow", "enter plane number"))
        self.searchPlane.setText(_translate("MainWindow", "Search"))


    def search_plane_info(self):
        type_p = self.planeNumber.toPlainText()
        print(self.fake_planes)
        print(self.verified_planes)
        self.state_s = "Search"
        for plane in self.window.area_planes:
            if plane.air_type == type_p:
                if plane.air_type not in self.verified_planes:
                    if not plane.status:
                        tmp = plane.clone()
                        tmp.speed += random.randint(100,200)
                        self.verified_planes.append(tmp.air_type)
                        self.fake_planes.append(tmp)
                        self.planeInfo.setPlainText(tmp.get_info())
                        self.state_s = "Found"
                    else:
                        self.planeInfo.setPlainText(plane.get_info())
                        self.state_s = "Found"
                        break
                elif not plane.status:
                    for item in self.fake_planes:
                        if item.air_type == type_p:
                            self.planeInfo.setPlainText(item.get_info())
                            self.state_s = "Found"
                            break
                else:
                    self.planeInfo.setPlainText(plane.get_info())
                    self.state_s = "Found"
                    break
        if self.state_s == "Search":
            self.planeInfo.setPlainText("Nothing was find")

